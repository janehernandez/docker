version: '3'

services:
  minio:
    container_name: minio
    hostname: minio
    image: docker.io/bitnami/minio:2022
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - minionetwork
      - rms_backend
      - hive_backend
    volumes:
      - 'minio_data:/data'
    environment:
      - MINIO_ROOT_USER=MINIO_ROOT_USER
      - MINIO_ROOT_PASSWORD=MINIO_ROOT_PASSWORD
      - ACCESS_KEY=MINIO_DEV_TESTING
      - SECRET_KEY=MINIO_DEV_TESTING
      - MINIO_DEFAULT_BUCKETS=dev-bucket
  mysql:
    container_name: mysql
    hostname: mysql-network
    image: mysql:8.0
    command: mysqld --authentication-policy=caching_sha2_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max_connections=1000
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '3306:3306'
    volumes:
      - './docker/mysql/db:/var/lib/mysql'
    networks:
      - rms_backend
      - hive_backend
  redis:
    container_name: redis
    hostname: redis
    image: redis:alpine
    command: redis-server
    ports:
      - '6379:6379'
    networks:
      - rms_backend
      - hive_backend
  # rabbitmq:
  #   image: rabbitmq:3-management-alpine
  #   container_name: rabbitmq
  #   hostname: rabbitmq-network
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   networks:
  #     - rabbitmq-network
networks:
  minionetwork:
    driver: bridge
  redis-network:
    driver: bridge
    name: redis-network
    external: true
  rms_backend:
    driver: bridge
    external: true
  hive_backend:
    driver: bridge
    external: true
  rabbitmq-network:
    driver: bridge
    name: rabbitmq-network
volumes:
  minio_data:
    driver: local
